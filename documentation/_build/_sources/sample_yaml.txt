==============================
**Sample YAML**
==============================


**Sample YAML syntax for respawn.**

.. code-block:: yaml


        # Globals
        stack_name: FCM
        environment: int
        team: &team fornax
        default_windows_ami: &win_ami ami-73e61a18
        multi_az: True
        eap: True
        ebs_optimized: &ebs_optimized false
        service_name: &service servicename


        parameters:
          testWeb:
            default: 10.201.22.33
            type: String
            description: sample description
            allowed_pattern: "[A-Za-z0-9]+"
            no_echo: true
            max_length: 23
            min_length: 1
            max_value: 34
            min_value: 1
            constraint_description: Malformed input-Parameter MyParameter must only contain upper and lower case letters
          daw0eip1:
            default : 10.201.22.32
            type : String
            description : sample description


        # Default Security Groups
        SgDevGroup: &dev_ sg-123456
        ELBSubnet: &elb_subnet  subnet-123456

        security_groups:
            Web: &web_sgs
              - *dev_sample

        load_balancers:
              testWeb:
                scheme: 'internet-facing'
                connection_settings:
                  idle_timeout: 40
                cross_zone: True
                security_groups:
                  - sg-123456
                  - sg-123456
                service_name: *service
                instances:
                  - 10.23.23.23
                  - 13.12.13.14
                policies:
                   - policy_name: "policy_name"
                     attribute:
                        - name: "name1"
                          value: "value1"
                        - name: "name2"
                          value: "value2"
                     instance_ports:
                        - "2121"
                        - "2424"
                     load_balancer_ports:
                        - "32323"
                        - "2424"
                     policy_type: "SSLNegotiationPolicyType"
                   - policy_name: "policy_name1"
                     attribute:
                        - name: "value1"
                          value: "value2"
                     instance_ports:
                        - "2121"
                        - "2424"
                     load_balancer_ports:
                        - "32323"
                        - "2424"
                     policy_type: "SSLNegotiationPolicyType"
                realm: 'protected'
                app_cookie_stickiness_policy:
                  - policy_name: "policy_name1"
                    cookie_name: "cookie_name1"
                  - policy_name: "policy_name2"
                    cookie_name: "cookie_name2"
                connection_draining_policy:
                  enabled: True
                  timeout: 10
                availability_zones:
                  - "Fn::GetAZs": ""
                  - "availability zone 2"
                health_check:
                  healthy_threshold: String
                  interval: String
                  target: String
                  timeout: String
                  unhealthy_threshold: String
                lb_cookie_stickiness_policy:
                  - policy_name: "policy_name1"
                    cookie_expiration_period: String
                  - policy_name: "policy_name2"
                    cookie_expiration_period: String
                load_balancer_name: unique_name
                access_logging_policy:
                  emit_interval: 20
                  enabled: True
                  s3_bucket_name: "s3_bucket_name1"
                  s3_bucket_prefix: "s3_bucket_prefix1"
                listeners:
                  https:
                    load_balancer_port: 83
                    instance_port: 84
                    instance_protocol: tcp
                  tcp:
                    load_balancer_port: 8443
                    instance_port: 8443
                    instance_protocol: http
                    policy_names: sampleName
                tags:
                  - key: "key1"
                    value: "value1"
                  - key: "key2"
                    value: 'value2'

        instances:
              sampleInstance:
                hostname: testInstance
                realm: protected
                instance_type: m3.xlarge
                ami_id: sampleAMI
                ebs_optimized: true
                service_name: sampleServiceName
                iam_role: sampleIamRole
                security_groups:
                  - sg-test1
                  - sg-test2
                ramdisk_id: testRamDiskID
                source_dest_check: true
                network_interfaces:
                  "Network Interface 1":
                    public_ip: true
                    delete_on_termniation: true
                    device_index: 0
                    subnet_id: id-testSubnet1
                    private_ips:
                      - private_ip: 1.1.1.1
                        primary: false
                      - private_ip: 2.2.2.2
                        primary: true
                block_devices:
                  /dev/sda:
                    ebs:
                      delete_on_termination: false
                      encrypted: false
                      iops: 1000
                      size: 100
                      type: standard
                  /dev/sdb:
                    ebs:
                      snapshot_id: id-testSnapshot
                  /dev/sdc:
                    virtual_name: ephemeral0
                  /dev/sdd:
                    no_device: true
                volumes:
                  - device: ref(testvolume)
                    volume_id: /dev/sdk
                  - device: sample_dev
                    volume_id: sample_vol
                tags:
                  - key: testTag1
                    value: testTagValue1
                user_data:
                  file: pathToTestUserData.sh
                  params:
                    param1: hello
                    param2: world

        volumes:
            testVolume:
              availability_zone: testAZ
              instance: testInstance
              size: 100

            testVolume2:
              availability_zone: testAZ
              snapshot_id: testSnapshotID
              size: 1000
              iops: 4000
              kms_key_id: testKMSKey
              volume_type: standard
              encrypted: true
              tags:
                - key: testTag2
                  value: testTagValue2
              deletion_policy: Retain


        auto_scale_groups:
            djinIntWeb:
              hostname: testASGInstance
              realm: protected
              service_name: sampleServiceName
              min_size: 1
              max_size: 10
              desired_capacity: 10
              launch_configuration: ref(testWindowsLaunchConfig1)
              load_balancer_names:
                - ref(testWeb)
                - testWebLBName
                - sample_name
              availability_zones: zoneName

        launch_configurations:
            sampleLaunhcConfig:
              windows: true
              realm: protected
              instance_type: t2.small
              ebs_optimized: false
              ami_id: testAMIWin01
              iam_role: sampleIamRole
              key_pair: testKey
              public_ip: true
              security_groups:
                - sg-test01
                - sg-test03
              block_devices:
                /dev/sda:
                  ebs:
                    delete_on_termination: false
                    encrypted: false
                    iops: 1000
                    size: 100
                    type: standard
                /dev/sdb:
                  ebs:
                    snapshot_id: id-testSnapshot
                /dev/sdc:
                  virtual_name: ephemeral0
                /dev/sdd:
                  no_device: true

        lifecycle_hooks:
          testLifecycleHook:
              asg_name: ref(djinIntWeb)
              lifecycle_transition: autoscaling:EC2_INSTANCE_TERMINATING
              notification_target_arn: ref(testName) # SNS Topic
              role_arn: ref(someIAMRole)
              heartbeat_timeout: 1800
              default_result: CONTINUE
              notification_metadata: test_metadata


        scheduled_actions:
          sampleWebActionDown:
              asg_name: sampleName
              desired_capacity: 0
              max_size: 0
              min_size: 0
              recurrence: 0 7 * * *

          sampleWebActionUp:
              asg_name: sampleName2
              desired_capacity: 10
              max_size: 10
              min_size: 10
              recurrence: 0 9 * * *

        rds:
          myTestRDS:
            realm: private
            service_name: sample/name
            allocated_storage: 100
            instance_class: db.m1.small
            engine: "MySQL"
            allow_major_version_upgrade: True
            allow_minor_version_upgrade: True
            availability_zone: string
            backup_retention_period: string
            character_set_name: string
            instance_identifier: string
            db_name: string
            db_parameter_group_name: string
            db_security_groups: string
            snapshot_identifier: string
            subnet_group_name: string
            engine: string
            engine_version: string
            iops: 1000
            kms_key_id: string
            license_model: string
            master_username: string
            multi_az: False
            option_group_name: string
            port: string
            preferred_backup_window: string
            preferred_maintenance_window: string
            publicly_accessible: False
            source_db_instance_identifier: string
            storage_encrypted: True
            vpc_security_groups:
              - string

        network_interface:
          testNi:
            description: sample description
            group_set:
              - some group
              - another group
            private_ip_address: 10.20.03.20
            private_ip_addresses:
             - 10.23.23.23
             - 12.13.3.4
            secondary_private_ip_address_count: 4
            source_dest_check: true
            subnet_id: 131.3.13.
            tags:
                - key: testTag2
                  value: testTagValue2
                - key: sdsd
                  value: sdsd

        network_interface_attachment: #check
            generic:
               testnia:
                 delete_on_termination: False
                 device_index: '1'
                 instance_id: 'sampleId'
                 network_interface_id: *web_sgs

        sns_topics:
          testName:
            display_name : MySnSTopic
            topic_name : SampleTopic
            subscription:
              - protocol : https
                endpoint : ref(OpsGenieEndpoint)
              - protocol : http
                endpoint : htps://sdsdsd.com

        cloud_watch:
          testCloudwatch:
            actions_enabled : True
            alarm_actions :
              - String1
              - String2
            alarm_name : test_alarm
            alarm_description : "sample  description"
            comparison_operator : String
            dimensions :
              - name : Metric dimension
                value : 123
              - name: name2
                value: ref(test_name)
              - name: name3
                value: test_value
            evaluation_periods : 15
            insufficient_data_actions :
              - String
              - String2
            metric_name : some_name
            namespace : some_namespace
            ok_actions :
              - String
              - String2
            period : 12
            statistic : Average
            threshold : 10
            unit : String


